AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Example API
Resources:
  lambdalayerawscli:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:903779448426:applications/lambda-layer-awscli
        # You should get the latest SemanticVersion with the following aws-cli:
        # aws serverlessrepo get-application --application-id arn:aws:serverlessrepo:us-east-1:903779448426:applications/lambda-layer-awscli --query 'Version.SemanticVersion' --output text
        SemanticVersion: 1.16.214

  SampleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      CodeUri: func-bundle.zip
      Runtime: provided
      Layers:
        - !GetAtt lambdalayerawscli.Outputs.LayerVersionArn
      MemorySize: 512
      # Policies: 
      #   - AWSLambdaBasicExecutionRole
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaExecGetCE"
      Timeout: 10
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /demo
            Method: any
            RestApiId: !Ref MyDemoApi
         

  MyDemoApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "siri-run-instance-stack"
          # host: "xxxx.execute-api.us-west-2.amazonaws.com"
        basePath: "/Prod"
        schemes:
        - "https"
        paths:
          /demo:
            x-amazon-apigateway-any-method:
              responses: {}
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SampleFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
        securityDefinitions:
          api_key:
            type: "apiKey"
            name: "x-api-key"
            in: "header"
      
            
  ApiKey:
    DependsOn: MyDemoApiProdStage
    Type: AWS::ApiGateway::ApiKey
    Properties: 
      # CustomerId: String
      Description: API Key for Siri Demo
      Enabled: true
      # GenerateDistinctId: Boolean
      Name: SiriDemoKey
      StageKeys:
        - 
          RestApiId: !Ref MyDemoApi
          StageName: Prod
          
  SiriUsagePlan:
    DependsOn: MyDemoApiProdStage
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages: 
      - 
        ApiId: !Ref MyDemoApi
        Stage: Prod
        # Throttle:
      Description: "Usage plan for Siri Demo"
      Quota: 
        Limit: 100
        # Offfset:
        Period: DAY
      Throttle:
        BurstLimit: 10
        # RateLimit:
      UsagePlanName: !Sub "up-${AWS::StackName}"

  SiriUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref SiriUsagePlan    

Outputs:
  DemoApiURL:
    Description: URL for application
    Value: !Sub 'https://${MyDemoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/demo'
    Export:
      Name: !Sub 'DemoApiURL-${AWS::StackName}'
  ApiKey:
    Description: API Key for the request
    Value: !Ref ApiKey
    Export:
      Name: !Sub 'DemoApiApiKey-${AWS::StackName}'